=Android Query=

Android-Query (AQuery)is a light-weight library for manipulating UI elements in Android. The goal is to make UI coding simpler and easier.

==Why AQuery? ==


===Less Code===

*Before AQuery:*
{{{
public void renderContent(Content content, View view) {
	
	
	ImageView tbView = (ImageView) view.findViewById(R.id.icon); 
	if(tbView != null){
		tbView.setImageBitmap(R.drawable.icon);
		tbView.setVisibility(View.VISIBLE);
	}
	
	TextView nameView = (TextView) view.findViewById(R.id.name);   	
	if(nameView != null){
		nameView.setText(content.getPname());
	}
	
	TextView timeView = (TextView) view.findViewById(R.id.time);  
	
	if(timeView != null){
		long now = System.currentTimeMillis();
		timeView.setText(FormatUtility.relativeTime(now, content.getCreate()));
		timeView.setVisibility(View.VISIBLE);
	}
	
	TextView descView = (TextView) view.findViewById(R.id.desc);   	
	
	if(descView != null){
		descView.setText(content.getDesc());
		descView.setVisibility(View.VISIBLE);
	}
}

}}}



===Chaining===

===Less Fragmentation===

Fragmentation is annoying for Android. Features in new API are great, but majority of mobile devices are not updated with the latest API. See [http://developer.android.com/resources/dashboard/platform-versions.html Android Platform Versions Distribution]

AQuery alleviate this issue by dynamically inspecting the Android framework, and make new API features available to code that are compiled for lower API. If the feature is not available, AQuery simply ignores the request.

*Enable hardware acceleration with API 4:*
{{{
@Override
protected void onCreate(Bundle savedInstanceState){
  	
  	//My API level 4 onCreate setup here... 
  	
	AQuery aq = new AQuery(this);	
	
	//Enable hardware acceleration if the device has API 11 or above	
	aq.hardwareAccelerated();
	
}

}}}

*Enable activity transition animation in API 4:*
{{{
@Override
protected void onCreate(Bundle savedInstanceState){
  	
  	AQuery aq = new AQuery(this);	
	
	//Override activity transition for device with API level 5	
	aq.overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left)
  	
  	//API level 4 onCreate setup here... 
  	
}
}}}

=== Multiple UI, One Piece of Code===

With the waves of new Tablet devices, Android apps need to support a wider range of screen sizes.  

===Extend-able===

===Light Weight===

Memory is scarce for mobile apps. The AQuery lib is standalone and relatively small (~10k for 0.0.1).

=History=

AQuery is inspired by jQuery, a javascript framework for web. 

=Demo App=

Try out [https://market.android.com/details?id=com.pekca.vikispot.android VikiSpot Reader].

AQuery is originally written along the way of the development of the VikiSpot Reader.

=Contribute!=

AQuery is a new library and need nourishment from the community. The initial version is only covering a small (but frequently used) of the Android UI framework. If you have requests or want to contribute code, please open a ticket with the [http://code.google.com/p/android-query/issues/list tracking system].

=Support=

If you like AQuery approach to simplify Android development, help us spread the words to other Android developers! 