#AQuery API Quick Start

= AQuery API=


==Core Concept ==

There's only 1 class in AQuery. That is, the AQuery class.

AQuery object has two states: "root" and the "view".

Let's start with a simple example:

Layout:
{{{
<LinearLayout 
    xmlns:android="http://schemas.android.com/apk/res/android"    
    android:layout_width="fill_parent"
    android:layout_height="fill_parent" android:orientation="vertical">
    
   <TextView
	    android:id="@+id/text"
	    android:layout_width="fill_parent"
	    android:layout_height="wrap_content"	    
	    android:text="Text"
	></TextView>
	
	<Button 
		android:id="@+id/button" 
		android:layout_width="wrap_content" 
		android:layout_height="wrap_content" 
		android:text="Button" 
	></Button>
	
</LinearLayout>

}}}

Activity:
{{{

public class TestActivity extends Activity {
	
	private AQuery aq;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		  
		super.onCreate(savedInstanceState);
		setContentView(R.layout.test);

		//use activity to create the AQuery object
		//this set the activity as the "root"	  
		aq = new AQuery(this);
	  
		//id(R.id.text) - point the current "view" to the TextView with id=R.id.text
		//text("Hello") - call the corresponding methods to change it
		aq.id(R.id.text).text("Hello");
	  
		//id(R.id.button) - switch to a different "view"
		//text("Click Me") - update the button text
		//clicked(this, "buttonClicked") - assign a listener to the button, pass in the method name
		aq.id(R.id.button).text("Click Me").clicked(this, "buttonClicked");
	  
		
	}
	
	public void buttonClicked(View button){
		
		//update the text
		aq.id(R.id.text).text("Hello World");
		
	}
	
}

}}}

AQuery usage:

  # Create an AQuery object with an activity, or the root view of a fragment
  # Use the id() or find() methods to set the current "view"
  # Call the appropriate methods to update the view
  # Repeats #2

That's it! 

== Methods ==

===Activity===
hardwareAccelerated11
overridePendingTransition5

===All Views===
background
clicked
enabled
margin
gone
visible
invisible
transparent
getTag
getView
isExist
itemClicked
setLayerType11

===TextView===
text
textColor
getEditable
getTextView

===Edit Text===
getEditText

===Image View===
image
getImageView

===ListView===
dataChanged
scrolledBottom
